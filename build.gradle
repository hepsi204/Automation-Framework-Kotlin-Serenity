buildscript {
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:2.0.70"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id "io.gitlab.arturbosch.detekt" version "1.4.0"
    id "ua.eshepelyuk.ManifestClasspath" version "1.0.0"
}

defaultTasks 'clean'

group 'SerenityKotlin'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.slf4j:slf4j-simple:1.7.7"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "com.github.tomakehurst:wiremock-standalone:2.17.0"
    compile "junit:junit:4.12"
    compile "net.serenity-bdd:serenity-core:2.0.70"
    compile "net.serenity-bdd:serenity-junit:2.0.70"
    compile 'net.serenity-bdd:serenity-cucumber:1.9.45'
    compile 'net.serenity-bdd:serenity-rest-assured:2.0.70'
    compile "org.assertj:assertj-core:3.8.0"
    compile 'io.github.bonigarcia:webdrivermanager:3.6.2'
    compile 'io.appium:java-client:3.3.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    testLogging.showStandardStreams = true
    /* Assign all env variables passed to gradle as system properties.
    Serenity only picks up on properties (not env variables) */
    systemProperties System.getProperties()
    afterTest { desc, result ->
        if ("FAILURE" == result.resultType as String) {
            failures.withWriterAppend {
                it.write("${desc.className}.${desc.name}\n")
            }
        }
    }}
